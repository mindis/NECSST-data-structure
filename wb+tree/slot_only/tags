!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Append	no_flush_logging/wbtree.c	/^int Append(node *n, unsigned long key, void *value)$/;"	f
Append	wbtree.c	/^int Append(node *n, unsigned long key, void *value)$/;"	f
Append_in_inner	no_flush_logging/wbtree.c	/^int Append_in_inner(node *n, unsigned long key, void *value)$/;"	f
Append_in_inner	wbtree.c	/^int Append_in_inner(node *n, unsigned long key, void *value)$/;"	f
BIN_DIR	Makefile	/^BIN_DIR=.\/$/;"	m
BIN_DIR	no_flush_logging/Makefile	/^BIN_DIR=.\/$/;"	m
CACHE_LINE_SIZE	no_flush_logging/wbtree.h	4;"	d
CACHE_LINE_SIZE	wbtree.h	4;"	d
CFLAGS	Makefile	/^CFLAGS= -c $/;"	m
CFLAGS	no_flush_logging/Makefile	/^CFLAGS= -c $/;"	m
Insert	no_flush_logging/wbtree.c	/^void Insert(tree *t, unsigned long key, void *value){$/;"	f
Insert	wbtree.c	/^void Insert(tree *t, unsigned long key, void *value){$/;"	f
LE_COMMIT	no_flush_logging/wbtree.h	7;"	d
LE_COMMIT	wbtree.h	7;"	d
LE_DATA	no_flush_logging/wbtree.h	6;"	d
LE_DATA	wbtree.h	6;"	d
Lookup	no_flush_logging/wbtree.c	/^void *Lookup(tree *t, unsigned long key)$/;"	f
Lookup	wbtree.c	/^void *Lookup(tree *t, unsigned long key)$/;"	f
NODE_SIZE	no_flush_logging/wbtree.h	2;"	d
NODE_SIZE	wbtree.h	2;"	d
Range_Lookup	no_flush_logging/wbtree.c	/^void Range_Lookup(tree *t, unsigned long start_key, unsigned int num, $/;"	f
Range_Lookup	wbtree.c	/^void Range_Lookup(tree *t, unsigned long start_key, unsigned int num, $/;"	f
Search	no_flush_logging/wbtree.c	/^int Search(node *curr, char *temp, unsigned long key)$/;"	f
Search	wbtree.c	/^int Search(node *curr, char *temp, unsigned long key)$/;"	f
add_commit_entry	no_flush_logging/wbtree.c	/^void add_commit_entry()$/;"	f
add_commit_entry	wbtree.c	/^void add_commit_entry()$/;"	f
add_redo_logentry	no_flush_logging/wbtree.c	/^void add_redo_logentry()$/;"	f
add_redo_logentry	wbtree.c	/^void add_redo_logentry()$/;"	f
addr	no_flush_logging/wbtree.h	/^	unsigned long addr;$/;"	m	struct:redo_log_entry
addr	wbtree.h	/^	unsigned long addr;$/;"	m	struct:redo_log_entry
allocNode	no_flush_logging/wbtree.c	/^node *allocNode()$/;"	f
allocNode	wbtree.c	/^node *allocNode()$/;"	f
clflush	no_flush_logging/wbtree.c	/^static inline void clflush(volatile void *__p)$/;"	f	file:
clflush	wbtree.c	/^static inline void clflush(volatile void *__p)$/;"	f	file:
clflush_cnt	no_flush_logging/wbtree.c	/^long clflush_cnt;$/;"	v
clflush_cnt	wbtree.c	/^long clflush_cnt;$/;"	v
clflush_range	no_flush_logging/wbtree.c	/^int clflush_range(void *start, void *end)$/;"	f
clflush_range	wbtree.c	/^int clflush_range(void *start, void *end)$/;"	f
clflush_range_nomb	no_flush_logging/wbtree.c	/^int clflush_range_nomb(void *start, void *end)$/;"	f
clflush_range_nomb	wbtree.c	/^int clflush_range_nomb(void *start, void *end)$/;"	f
clftime	no_flush_logging/wbtree.c	/^long long clftime=0;$/;"	v
clftime	wbtree.c	/^long long clftime=0;$/;"	v
commit_entry	no_flush_logging/wbtree.h	/^struct commit_entry {$/;"	s
commit_entry	no_flush_logging/wbtree.h	/^typedef struct commit_entry commit_entry;$/;"	t	typeref:struct:commit_entry
commit_entry	wbtree.h	/^struct commit_entry {$/;"	s
commit_entry	wbtree.h	/^typedef struct commit_entry commit_entry;$/;"	t	typeref:struct:commit_entry
dummy	no_flush_logging/wbtree.h	/^	char dummy[52];$/;"	m	struct:node
dummy	wbtree.h	/^	char dummy[52];$/;"	m	struct:node
entries	no_flush_logging/wbtree.h	/^	struct entry entries[NODE_SIZE];$/;"	m	struct:node	typeref:struct:node::entry
entries	wbtree.h	/^	struct entry entries[NODE_SIZE];$/;"	m	struct:node	typeref:struct:node::entry
entry	no_flush_logging/wbtree.h	/^struct entry{$/;"	s
entry	no_flush_logging/wbtree.h	/^typedef struct entry entry;$/;"	t	typeref:struct:entry
entry	wbtree.h	/^struct entry{$/;"	s
entry	wbtree.h	/^typedef struct entry entry;$/;"	t	typeref:struct:entry
find_leaf_node	no_flush_logging/wbtree.c	/^node *find_leaf_node(node *curr, unsigned long key){$/;"	f
find_leaf_node	wbtree.c	/^node *find_leaf_node(node *curr, unsigned long key){$/;"	f
flush_buffer	no_flush_logging/wbtree.c	/^void flush_buffer(void *buf, unsigned int len)$/;"	f
flush_buffer	wbtree.c	/^void flush_buffer(void *buf, unsigned int len)$/;"	f
height	no_flush_logging/wbtree.h	/^	int height;$/;"	m	struct:tree
height	wbtree.h	/^	int height;$/;"	m	struct:tree
initTree	no_flush_logging/wbtree.c	/^tree *initTree()$/;"	f
initTree	wbtree.c	/^tree *initTree()$/;"	f
insert_in_inner	no_flush_logging/wbtree.c	/^void insert_in_inner(node *curr, unsigned long key, void *value)$/;"	f
insert_in_inner	wbtree.c	/^void insert_in_inner(node *curr, unsigned long key, void *value)$/;"	f
insert_in_inner_noflush	no_flush_logging/wbtree.c	/^int insert_in_inner_noflush(node *curr, unsigned long key, void *value)$/;"	f
insert_in_inner_noflush	wbtree.c	/^int insert_in_inner_noflush(node *curr, unsigned long key, void *value)$/;"	f
insert_in_leaf	no_flush_logging/wbtree.c	/^void insert_in_leaf(node *curr, unsigned long key, void *value){$/;"	f
insert_in_leaf	wbtree.c	/^void insert_in_leaf(node *curr, unsigned long key, void *value){$/;"	f
insert_in_leaf_noflush	no_flush_logging/wbtree.c	/^int insert_in_leaf_noflush(node *curr, unsigned long key, void *value)$/;"	f
insert_in_leaf_noflush	wbtree.c	/^int insert_in_leaf_noflush(node *curr, unsigned long key, void *value)$/;"	f
insert_in_parent	no_flush_logging/wbtree.c	/^void insert_in_parent(tree *t, node *curr, unsigned long key, node *splitNode) {$/;"	f
insert_in_parent	wbtree.c	/^void insert_in_parent(tree *t, node *curr, unsigned long key, node *splitNode) {$/;"	f
isleaf	no_flush_logging/wbtree.h	/^	int isleaf;$/;"	m	struct:node
isleaf	wbtree.h	/^	int isleaf;$/;"	m	struct:node
key	no_flush_logging/wbtree.h	/^	unsigned long key;$/;"	m	struct:entry
key	wbtree.h	/^	unsigned long key;$/;"	m	struct:entry
leftmostPtr	no_flush_logging/wbtree.h	/^	struct node *leftmostPtr;$/;"	m	struct:node	typeref:struct:node::node
leftmostPtr	wbtree.h	/^	struct node *leftmostPtr;$/;"	m	struct:node	typeref:struct:node::node
main	main.c	/^int main(void)$/;"	f
main	no_flush_logging/main.c	/^int main(void)$/;"	f
mbtime	no_flush_logging/wbtree.c	/^long long mbtime=0;$/;"	v
mbtime	wbtree.c	/^long long mbtime=0;$/;"	v
mfence	no_flush_logging/wbtree.c	15;"	d	file:
mfence	wbtree.c	15;"	d	file:
min_live_entries	no_flush_logging/wbtree.h	3;"	d
min_live_entries	wbtree.h	3;"	d
new_value	no_flush_logging/wbtree.h	/^	unsigned long new_value;$/;"	m	struct:redo_log_entry
new_value	wbtree.h	/^	unsigned long new_value;$/;"	m	struct:redo_log_entry
node	no_flush_logging/wbtree.h	/^struct node{$/;"	s
node	no_flush_logging/wbtree.h	/^typedef struct node node;$/;"	t	typeref:struct:node
node	wbtree.h	/^struct node{$/;"	s
node	wbtree.h	/^typedef struct node node;$/;"	t	typeref:struct:node
parent	no_flush_logging/wbtree.h	/^	struct node* parent;$/;"	m	struct:node	typeref:struct:node::node
parent	wbtree.h	/^	struct node* parent;$/;"	m	struct:node	typeref:struct:node::node
printNode	no_flush_logging/wbtree.c	/^void printNode(node *n){$/;"	f
printNode	wbtree.c	/^void printNode(node *n){$/;"	f
ptr	no_flush_logging/wbtree.h	/^	void *ptr;$/;"	m	struct:entry
ptr	wbtree.h	/^	void *ptr;$/;"	m	struct:entry
redoLog	no_flush_logging/wbtree.c	/^char *redoLog;$/;"	v
redoLog	wbtree.c	/^char *redoLog;$/;"	v
redoLog_offset	no_flush_logging/wbtree.c	/^int redoLog_offset=0;$/;"	v
redoLog_offset	wbtree.c	/^int redoLog_offset=0;$/;"	v
redo_log_entry	no_flush_logging/wbtree.h	/^struct redo_log_entry {$/;"	s
redo_log_entry	no_flush_logging/wbtree.h	/^typedef struct redo_log_entry redo_log_entry;$/;"	t	typeref:struct:redo_log_entry
redo_log_entry	wbtree.h	/^struct redo_log_entry {$/;"	s
redo_log_entry	wbtree.h	/^typedef struct redo_log_entry redo_log_entry;$/;"	t	typeref:struct:redo_log_entry
root	no_flush_logging/wbtree.h	/^	node *root;$/;"	m	struct:tree
root	wbtree.h	/^	node *root;$/;"	m	struct:tree
slot	no_flush_logging/wbtree.h	/^	char slot[NODE_SIZE+1];$/;"	m	struct:node
slot	wbtree.h	/^	char slot[NODE_SIZE+1];$/;"	m	struct:node
tree	no_flush_logging/wbtree.h	/^struct tree{$/;"	s
tree	no_flush_logging/wbtree.h	/^typedef struct tree tree;$/;"	t	typeref:struct:tree
tree	wbtree.h	/^struct tree{$/;"	s
tree	wbtree.h	/^typedef struct tree tree;$/;"	t	typeref:struct:tree
type	no_flush_logging/wbtree.h	/^	unsigned char type;$/;"	m	struct:commit_entry
type	no_flush_logging/wbtree.h	/^	unsigned char type;$/;"	m	struct:redo_log_entry
type	wbtree.h	/^	unsigned char type;$/;"	m	struct:commit_entry
type	wbtree.h	/^	unsigned char type;$/;"	m	struct:redo_log_entry
